---
const { title, subtitle, cta } = Astro.props;

import heroImage from "../assets/hero.jpg";
---

<section>
    <div class="overlay"></div>

    <video loop muted autoplay playsinline poster={heroImage.src}>
        <source src="/hero.mp4" type="video/mp4" />
    </video>
    <div class="hero-content">
        <h1>
            {
                title
                    .split("")
                    .map((char, index) => (
                        <span key={index}>
                            {char === " " ? "\u00A0" : char}
                        </span>
                    ))
            }
        </h1>
        <p>{subtitle}</p>
        {
            cta && (
                <a href="/services" class="cta-button">
                    Explore Our Services
                    <i class="fa-solid fa-arrow-right" />
                </a>
            )
        }
    </div>
</section>

<style>
    section {
        position: relative;
        display: flex;
        width: 100%;
        height: 100vh;
        padding: 0;
        justify-content: center;
        align-items: center;
        color: var(--color-white);
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .overlay {
        z-index: 10;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
    }

    .hero-content {
        z-index: 20;
        display: flex;
        flex-direction: column;
        gap: var(--space-8);
        justify-content: center;
        align-items: center;
    }

    h1 {
        display: flex;
        font-size: var(--font-size-hero);
        font-weight: var(--font-weight-bold);
        text-align: center;
    }
    h1 span {
        filter: blur(100px);
        animation: 1s linear 1 blur-animation;
        animation-fill-mode: forwards;
    }
    h1 span:nth-child(1) {
        animation-delay: 0s;
    }
    h1 span:nth-child(2) {
        animation-delay: 0.05s;
    }
    h1 span:nth-child(3) {
        animation-delay: 0.1s;
    }
    h1 span:nth-child(4) {
        animation-delay: 0.15s;
    }
    h1 span:nth-child(5) {
        animation-delay: 0.2s;
    }
    h1 span:nth-child(6) {
        animation-delay: 0.25s;
    }
    h1 span:nth-child(7) {
        animation-delay: 0.3s;
    }
    h1 span:nth-child(8) {
        animation-delay: 0.35s;
    }
    h1 span:nth-child(9) {
        animation-delay: 0.4s;
    }
    h1 span:nth-child(10) {
        animation-delay: 0.45s;
    }
    h1 span:nth-child(11) {
        animation-delay: 0.5s;
    }
    h1 span:nth-child(12) {
        animation-delay: 0.55s;
    }
    h1 span:nth-child(13) {
        animation-delay: 0.6s;
    }
    h1 span:nth-child(14) {
        animation-delay: 0.65s;
    }
    h1 span:nth-child(15) {
        animation-delay: 0.7s;
    }
    h1 span:nth-child(16) {
        animation-delay: 0.75s;
    }
    h1 span:nth-child(17) {
        animation-delay: 0.8s;
    }
    h1 span:nth-child(18) {
        animation-delay: 0.85s;
    }
    h1 span:nth-child(19) {
        animation-delay: 0.9s;
    }

    p {
        text-align: center;
        max-width: 750px;
        font-size: var(--font-size-2xl);
    }

    .cta-button {
        display: inline-flex;
        align-items: center;
        gap: var(--space-2);
        padding: var(--space-3) var(--space-6);
        border: 1px solid var(--color-accent);
        border-radius: var(--radius-full);
        box-shadow: var(--shadow-base);
        background: var(--color-black);
        color: var(--color-white);
        font-size: var(--font-size-xl);
        text-decoration: none;
        transition: box-shadow 0.3s ease;
    }
    .cta-button:hover {
        box-shadow: var(--shadow-hover);
    }

    @keyframes blur-animation {
        0% {
            filter: blur(100px);
        }
        50% {
            filter: blur(50px);
        }
        75% {
            filter: blur(10px);
        }
        100% {
            filter: blur(0);
            background: linear-gradient(
                to bottom,
                var(--color-accent),
                var(--color-white)
            );
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    }
</style>
