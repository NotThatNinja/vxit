---
const { title, subtitle, cta } = Astro.props;
---

<section>
    <div class="overlay"></div>

    <video loop muted autoplay playsinline poster="/vxit/poster.jpg">
        <source src="/vxit/hero.mp4" type="video/mp4" />
    </video>
    <div class="hero-content">
        <h1>
            {
                title.split(" ").map((word, i) => (
                    <span class="hero-word">
                        {word.split("").map((char, j) => (
                            <span
                                style={`animation-delay: ${i * title.split(" ")[0].length * 0.05 + j * 0.05}s`}
                                class="hero-char"
                            >
                                {char}
                            </span>
                        ))}
                        &nbsp;
                    </span>
                ))
            }
        </h1>
        <p>
            {
                subtitle.split(" ").map((word, i) => (
                    <span
                        style={`animation-delay: ${i * 0.05}s`}
                        class="sub-char"
                    >
                        {word}
                    </span>
                ))
            }
        </p>
        {
            cta && (
                <a href="/vxit/contact" class="cta-button">
                    Contact Us
                    <i class="fa-solid fa-arrow-right" />
                </a>
            )
        }
    </div>
</section>

<style>
    section {
        position: relative;
        display: flex;
        width: calc(100% - 2 * var(--space-6));
        height: 100vh;
        padding: 0 var(--space-6);
        justify-content: center;
        align-items: center;
        color: var(--color-white);
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .overlay {
        z-index: 10;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
    }

    .hero-content {
        z-index: 20;
        display: flex;
        flex-direction: column;
        gap: var(--space-8);
        justify-content: center;
        align-items: center;
    }

    h1 {
        display: inline-flex;
        flex-wrap: wrap;
        justify-content: center;
        font-size: var(--font-size-hero);
        font-weight: var(--font-weight-bold);
        text-align: center;
    }
    .hero-word {
        display: inline-flex;
        flex-wrap: wrap;
    }
    .hero-char,
    .sub-char {
        filter: blur(100px);
        animation: 1s linear 1 hero-animation;
        animation-fill-mode: forwards;
    }
    .sub-char {
        animation: 1s linear 1 sub-animation;
        animation-fill-mode: forwards;
    }

    p {
        text-align: center;
        max-width: 750px;
        font-size: var(--font-size-2xl);
        animation: 1.5s linear 1 opacityAnimation;
        animation-fill-mode: forwards;
    }

    .cta-button {
        display: inline-flex;
        align-items: center;
        gap: var(--space-2);
        padding: var(--space-3) var(--space-6);
        border: 1px solid var(--color-accent);
        border-radius: var(--radius-full);
        box-shadow: var(--shadow-base);
        background: var(--color-black);
        color: var(--color-white);
        font-size: var(--font-size-xl);
        text-decoration: none;
        transition: box-shadow 0.3s ease;
    }
    .cta-button:hover {
        box-shadow: var(--shadow-hover);
    }

    @keyframes hero-animation {
        0% {
            filter: blur(100px);
        }
        50% {
            filter: blur(50px);
        }
        75% {
            filter: blur(10px);
        }
        100% {
            filter: blur(0);
            background: linear-gradient(
                to bottom,
                var(--color-accent),
                var(--color-white)
            );
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    }

    @keyframes sub-animation {
        0% {
            filter: blur(100px);
        }
        50% {
            filter: blur(50px);
        }
        75% {
            filter: blur(10px);
        }
        100% {
            filter: blur(0);
        }
    }

    @keyframes opacityAnimation {
    }
</style>
